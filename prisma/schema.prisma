// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model accounts {
  id           Int       @id @default(autoincrement())
  name         String?
  email        String    @unique
  password     String
  isadmin     Boolean?  @default(false) @map(name: "isAdmin")
  createdat   DateTime  @default(now()) @map(name: "createdAt")
  updatedat   DateTime  @updatedAt @map(name: "updatedAt")

  employeeprofile employeeProfile?
}

model employeeProfile {
  id             Int       @id @default(autoincrement())
  firstname     String?   
  lastname      String?   
  dateofbirth  DateTime? @map(name: "dateOfBirth")
  gender         String?   
  email          String?   
  phone          String?   
  homeaddress   String?   @map(name: "homeAddress")
  dateofhire   DateTime? @map(name: "dateOfHire")
  status         String?   
  profilepicture String?   @map(name: "profilePicture")
  role           String?   

  createdat     DateTime  @default(now()) @map(name: "createdAt")
  updatedat     DateTime  @updatedAt @map(name: "updatedAt")

  // This field establishes a one-to-one relationship with accounts
  accountid     Int?      @unique @map(name: "accountId")

  // This field references the accounts table
  account        accounts? @relation(fields: [accountid], references: [id])
}

